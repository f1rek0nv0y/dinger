buildscript {
    apply from: "${rootProject.rootDir}/_buildsystem/buildscript.gradle"
    repositories project.ext.classpathRepositories
    dependencies project.ext.classpathDependencies
}

apply from: "${rootProject.rootDir}/_buildsystem/buildscript.gradle"
apply from: "${rootProject.rootDir}/_buildsystem/configurations.gradle"
apply from: "${rootProject.rootDir}/_buildsystem/dependencies.gradle"
apply from: "${rootProject.rootDir}/_buildsystem/properties.gradle"
apply from: "${rootProject.rootDir}/_buildsystem/optimizations.gradle"
apply from: "${rootProject.rootDir}/_buildsystem/test_options.gradle"

apply plugin: "com.android.application"
apply plugin: "com.bugsnag.android.gradle"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: "org.jmailen.kotlinter"
apply plugin: "kotlin-android-extensions"

android {
    buildToolsVersion project.ext.buildToolsVersion
    compileSdkVersion project.ext.androidCompileSdkVersion
    signingConfigs {
        dummy1 {
            storeFile new File("dummy1.keystore")
            storePassword("dummy1")
            keyAlias("dummy1")
            keyPassword("dummy1")
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug" // Do not change
        }
        release {
            signingConfig signingConfigs.dummy1
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard/rules.pro"
            shrinkResources true
        }
    }
    defaultConfig {
        applicationId project.ext.androidApplicationIdBase
        versionCode project.ext.androidVersionCode
        versionName project.ext.androidVersionName
        minSdkVersion project.ext.androidMinSdkVersion
        targetSdkVersion project.ext.androidTargetSdkVersion
        multiDexEnabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dexOptions {
        preDexLibraries false
        javaMaxHeapSize "8g"
    }
    lintOptions {
        abortOnError true
        absolutePaths true
        checkAllWarnings true
        htmlOutput = new File("$project.ext.staticAnalysisReportTarget/$project.name/lint.html")
        quiet false
        warningsAsErrors true
    }
    sourceSets.forEach {
        it.java.srcDirs = ["src/$it.name/kotlin"]
    }
    testOptions project.ext.testOptions
}
dependencies {
    implementation project(":data")
    // This is only for the ContentProvider. Don"t import data in src!
    implementation project(":domain")
    implementation project(":crash-reporter")
    implementation project(":event-tracker") // Required by the ContentProvider
    implementation project.ext.implementationDependencies
    kapt project.ext.annotationProcessorAppDependencies
    implementation project.ext.implementationAppDependencies
    testImplementation project.ext.testImplementationDependencies
    androidTestImplementation project.ext.androidTestImplementationDependencies
    androidTestUtil project.ext.androidTestUtilDependencies
}
